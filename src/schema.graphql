type Query{
  users:[User!]!
  jokes(query:String, minRate: Float): [Joke!]!
  comments(jokeId:ID, authorId:ID): [Comment!]!
  reviews(jokeId:ID, authorId:ID):[Review!]!
}

type User {
  id: ID!
  email: String!
  password: String!
  username: String!
  role: UserRole
  age: Int
  jokes:[Joke!]!
  comments: [Comment!]!
  reviews: [Review!]!
}

type Joke {
  id: ID!
  author: User!
  title: String!
  text: String!
  numberOfRatings: Int!
  sumOfRatings: Int!
  avgRating: Float!
  comments: [Comment!]!
  reviews: [Review!]!
}

type Comment {
  id: ID!
  text: String
  author: User!
  joke: Joke!
}

type Review {
  id: ID!
  author: User!
  joke: Joke!
  rate: Int!
  text: String!
}

enum UserRole {
  JOKER
  REVIEWER
}